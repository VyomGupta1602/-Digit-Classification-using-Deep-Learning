# -*- coding: utf-8 -*-
"""MNISTDGITS.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zBz5DGj_GomPhUVOoAOYXohm8pTU_11q
"""

import numpy as np
import pandas as pd
import tensorflow as tf
from tensorflow.keras.losses import SparseCategoricalCrossentropy
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Dense
import csv
from keras.layers import *
from keras import optimizers

o=pd.read_csv('/content/sample_data/mnist_train_small.csv')
p=pd.read_csv('/content/sample_data/mnist_test.csv')

o.head(10)

p.head()

o.shape

f=o.iloc[:,1:785]
l=o.iloc[:,0]

set(l)

sum(f.isnull().sum())

from sklearn.model_selection import train_test_split
X_train, X_cv, y_train, y_cv = train_test_split(f, l, test_size = 0.2)

X_train = np.array(X_train)
X_cv = np.array(X_cv)

print((min(X_train[1]), max(X_train[1])))

X_train.shape

model=Sequential([Dense(units=300, activation='relu'),
                  Dense(units=150, activation='relu'),
                  Dense(units=180, activation='linear'),
                  Dense(10, activation='softmax')])

model.compile(tf.keras.optimizers.Adam(learning_rate=0.001),loss='SparseCategoricalCrossentropy',metrics=['accuracy'])

hist=model.fit(X_train, y_train,epochs=50,validation_data=(X_cv, y_cv))

x_test=p.iloc[:,0:784]
ans=model.predict(x_test)
ans=list(ans)
for x in range(len(ans)):
  ans[x]=list(ans[x])
for x in range(len(ans)):
  ans[x]=ans[x].index(max(ans[x]))
ans=np.array(ans)
ans

# Commented out IPython magic to ensure Python compatibility.
from matplotlib import pyplot as plt
# %matplotlib inline
import numpy as np
from tensorflow.keras.datasets import mnist
(X_train, Y_train), (X_test, Y_test) = mnist.load_data()
sample = -2
image = X_test[sample]
fig = plt.figure
plt.imshow(image, cmap='gray')
plt.show()

sample2=-1
image = X_test[sample2]
fig = plt.figure
plt.imshow(image, cmap='gray')
plt.show()

